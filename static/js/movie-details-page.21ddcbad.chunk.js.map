{"version":3,"sources":["services/api/apimovie.js","images/movie.jpeg","views/MovieDetailsPage.js"],"names":["FetchMovie","movieId","type","axios","defaults","baseURL","params","api_key","language","MovieDetailsPage","useState","movie","setMovie","useParams","location","useLocation","navigate","useNavigate","useEffect","then","response","data","onClick","state","from","src","poster_path","posterImg","alt","title","release_date","slice","overview","genres","map","id","name","to"],"mappings":"yIAAA,uDAEA,SAASA,EAAWC,GAAqB,IAAZC,EAAW,uDAAJ,GAMlC,OALAC,IAAMC,SAASC,QAAf,6CAA+DJ,GAA/D,OAAyEC,GACzEC,IAAMC,SAASE,OAAS,CACtBC,QAAS,mCACTC,SAAU,SAELL,Q,+ECRM,MAA0B,mC,OCiE1BM,UA3Df,WACE,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACQX,EAAYY,YAAU,MAAtBZ,QACFa,EAAWC,cACXC,EAAWC,cAQjB,OANAC,qBAAU,WACRlB,YAAWC,GAASkB,MAAK,SAACC,GACxBR,EAASQ,EAASC,WAEnB,CAACpB,IAGF,qCACE,wBACEC,KAAK,SACLoB,QAAS,kBACPR,EAASS,MAAQP,EAASF,EAASS,MAAMC,MAAQR,EAAS,MAH9D,SAMG,eAEFL,GACC,qCACE,qBACEc,IACEd,EAAMe,YAAN,0CACuCf,EAAMe,aACzCC,EAENC,IAAKjB,EAAMkB,QAEb,+BACGlB,EAAMkB,MADT,KACkBlB,EAAMmB,aAAaC,MAAM,EAAG,GAD9C,OAGA,0CACA,4BAAIpB,EAAMqB,WACV,wCACA,6BACGrB,EAAMsB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAChB,6BAAcA,GAALD,QAGb,wDACA,+BACE,6BACE,cAAC,IAAD,CAASE,GAAG,OAAZ,oBAEF,6BACE,cAAC,IAAD,CAASA,GAAG,UAAZ,0BAGJ,cAAC,IAAD","file":"static/js/movie-details-page.21ddcbad.chunk.js","sourcesContent":["import axios from \"axios\";\n\nfunction FetchMovie(movieId, type = \"\") {\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/movie/${movieId}${type}`;\n  axios.defaults.params = {\n    api_key: \"4ee679899b95e871f52315315906d996\",\n    language: \"en-US\",\n  };\n  return axios();\n}\n\nexport { FetchMovie };\n","export default __webpack_public_path__ + \"static/media/movie.ea3db8ef.jpeg\";","import { useState, useEffect } from \"react\";\nimport { useParams, useLocation, useNavigate } from \"react-router\";\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport { FetchMovie } from \"../services/api/apimovie\";\nimport posterImg from \"../images/movie.jpeg\";\n\nfunction MovieDetailsPage() {\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    FetchMovie(movieId).then((response) => {\n      setMovie(response.data);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={() =>\n          location.state ? navigate(location.state.from) : navigate(\"/\")\n        }\n      >\n        {\"<< Go back\"}\n      </button>\n      {movie && (\n        <>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                : posterImg\n            }\n            alt={movie.title}\n          />\n          <h2>\n            {movie.title} ({movie.release_date.slice(0, 4)})\n          </h2>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {movie.genres.map(({ id, name }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n          <h2>Additional information</h2>\n          <ul>\n            <li>\n              <NavLink to=\"cast\">Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"reviews\">Reviews</NavLink>\n            </li>\n          </ul>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}